#!/bin/bash

# === HEADER ===
#FileName: _test
#Function: Contains a test function for automated testing library
#library name: bashmultitool
#URL: https://github.com/gavinlyonsrepo/BashMultiTool

# === FUNCTIONS ===

function _test_func {

	local urlTestDir="$HOME/Documents/Tech/Scripts/BashMultiTool/test/testlog/"
	mkdir -p "$urlTestDir"
	local TestFile="test"

	case "$3" in
	START) # Start message
		printf "%s\n" "=== Start Automatic Tests === "
		_print_func norm "Delete log file if exists"
		rm -iv "$urlTestDir""$TestFile.log"
		_linux_func log "NOTICE" "Run Start" "$TestFile" "$urlTestDir"
		;;
	END)
		# End message
		if [ "$3" == "END" ]; then
			_linux_func log "NOTICE" "Run Over" "$TestFile" "$urlTestDir"
			_print_func norm "=== End Automatic Tests ==="
			_prompt_func anykey " " norm
			clear
			_misc_func title 14 226 "#" "             BashMultiTool library :: Test Results :: $TestFile.log              "
			_prompt_func eventstatus "Test Total" "$(grep -c "Test" "$urlTestDir""$TestFile.log")" b_white
			_prompt_func eventstatus "Test Passed" "$(grep -c "PASSED" "$urlTestDir""$TestFile.log")" b_green
			_prompt_func eventstatus "Test Failed" "$(grep -c "FAILED" "$urlTestDir""$TestFile.log")" b_red
			_prompt_func eventstatus "Test Errors" "$(grep -c "ERROR" "$urlTestDir""$TestFile.log")" b_yellow
			_prompt_func line "="

			# View File
			_prompt_func anykey "and view test log file." norm
			cat "$urlTestDir""$TestFile.log"
			_prompt_func line "="
			_prompt_func anykey "and delete test log file." norm
			#remove file?
			rm -iv "$urlTestDir""$TestFile.log"
			_prompt_func line "="
		fi
		;;
	*)
		if [ "$4" == "NOAUTO" ]; then # non -automatic test
			local yesnoVar=""
			while true; do
				_print_func norm "Did Test $3 pass? [y/n/q]"
				read -r yesnoVar
				case $yesnoVar in
				[Yy]*) _linux_func log "PASSED" "Test $3 Result :: User Check" "$TestFile" "$urlTestDir" && return 0 ;;
				[Nn]*) _linux_func log "FAILED" "Test $3 Result :: User Check" "$TestFile" "$urlTestDir" && return 2 ;;
				[Qq]*)
					_linux_func log "ERROR" "User aborted Test at $3" "$TestFile" "$urlTestDir"
					return 3
					;;
				*) _print_func b_yellow "Please answer: (y/Y for yes) OR (n/N for no) OR (q/Q to quit)!" ;;
				esac
			done
		else
			if [ "$1" -eq "$2" ]; then # Automatic test
				_linux_func log "PASSED" "Test $3 Result :: $1 $2" "$TestFile" "$urlTestDir"
				return 0
			else
				_linux_func log "FAILED" "Test $3 Result :: $1 $2" "$TestFile" "$urlTestDir"
				return 2
			fi
		fi
		;;
	esac
}
